resources:
  repositories:
  - repository: yamlTemplates
    type: git
    name: Keve/YamlTemplates

trigger:
- none

pool:
  name: Azure Pipelines
  
variables:
  projectName: WeatherForecast

stages:
- stage: CI
  displayName: CI Stage
  jobs:
  - job:
    steps:
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
#    - template: SonarQube/PrepareAnalysis.yml@yamlTemplates
#      parameters:
#        sonarQubeProjectKey: $(projectName)
#        sonarQubeProjectName: $(projectName)
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
#    - template: SonarQube/RunCodeAnalysis-PublishAndCheckQualityGateResult.yml@yamlTemplates
#      parameters:
#        sonarQubeProjectKey: $(projectName)
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeeded()

- template: dotNetCore/DeployWebSiteOnIIS.yml@yamlTemplates
  parameters:
    environment: Dev
    webSiteName: dev.$(projectName)
    websitePhysicalPath: '%SystemDrive%\Sites\dev.$(projectName)'
    bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"www.dev.$(projectName).pt","sslThumbprint":"","sniFlag":false}]}'
    appPoolNameForWebsite: dev.$(projectName)
    removeAdditionalFilesFlag: true
    takeAppOfflineFlag: true
    addBinding: true
    createOrUpdateAppPool: true
    dotNetVersionForWebsite: 'v4.0'
    pipeLineModeForWebsite: 'Integrated'
  
- template: dotNetCore/DeployWebSiteOnIIS.yml@yamlTemplates
  parameters:
    environment: QA
    webSiteName: qa.$(projectName)
    websitePhysicalPath: '%SystemDrive%\Sites\qa.$(projectName)'
    bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"www.qa.$(projectName).pt","sslThumbprint":"","sniFlag":false}]}'
    appPoolNameForWebsite: qa.$(projectName)
    removeAdditionalFilesFlag: true
    takeAppOfflineFlag: true
    addBinding: true
    createOrUpdateAppPool: true
    dotNetVersionForWebsite: 'v4.0'
    pipeLineModeForWebsite: 'Integrated'

- template: dotNetCore/DeployWebSiteOnIIS.yml@yamlTemplates
  parameters:
    environment: Prod
    webSiteName: $(projectName)
    websitePhysicalPath: '%SystemDrive%\Sites\$(projectName)'
    bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"www.$(projectName).pt","sslThumbprint":"","sniFlag":false}]}'
    appPoolNameForWebsite: $(projectName)
    removeAdditionalFilesFlag: true
    takeAppOfflineFlag: true
    addBinding: true
    createOrUpdateAppPool: true
    dotNetVersionForWebsite: 'v4.0'
    pipeLineModeForWebsite: 'Integrated'
  